var app = angular.module('home', ["angular-util", "angular-diretivas", "ui.bootstrap", "ngSanitize", "pesquisaSatisfacao"], function ($httpProvider) {

});

app.controller('MainController', ['$scope', '$uibModal', '$rootScope', '$timeout', '$window', 'idiomaService', 'messageService', 'servHome', 'servPesquisaSatisfacao', '$uibModal',
    function ($scope, $uibModal, $rootScope, $timeout, $window, idiomaService, messageService, servHome, servPesquisaSatisfacao) {

        var ctrlHome = this;
        ctrlHome.model = {};
        ctrlHome.DadosPesquisa = { Paginacao: new Pagination() };
        ctrlHome.RowsPerPage = 10;

        //Menu
        $timeout(function () {
            util.Events.SetFuncionalidadeAtual(null, Enums.Enum_Funcionalidade["Noticias"]);
            util.Events.ChangeCulture(null, true, true, false, false);
            angularUtil.SafeApply($scope);

            servPesquisaSatisfacao.VerificaExistePesquisaSatisfacao(servPesquisaSatisfacao.AbrirMensagemRespondeOuNaoPesquisa,
                servPesquisaSatisfacao.ExecutaAberturaModalPesquisaSatisfacao, ctrlHome.translations);

            ctrlHome.PreparaDadosParaPesquisaNoticias();
        });

        //Traduções gerais
        ctrlHome.CallBackCulture = function (campos) {
            ctrlHome.model.IdiomaId = $("#hfIdioma").val();

            angularUtil.SafeApply($scope, function () {
                idiomaService.setTranslationsCallBackCulture(campos);
                ctrlHome.translations = idiomaService.translations;
            });
        };

        callbackCultureFunction = ctrlHome.CallBackCulture;


        //Pesquisa
        ctrlHome.PreparaDadosParaPesquisaNoticias = function () {
            ctrlHome.DadosPesquisa.Paginacao.totalRegistros = 0;
            ctrlHome.DadosPesquisa.Paginacao.page = 1;
            ctrlHome.DadosPesquisa.Paginacao.rowsPerPage = ctrlHome.RowsPerPage;
            ctrlHome.DadosPesquisa.Paginacao.SetTotalPages();
            ctrlHome.PesquisarNoticias();
        };

        ctrlHome.VerificaNavegadorIE = function () {
            var userAgent = $window.navigator.userAgent;

            var browsers = { chrome: /chrome/i, safari: /safari/i, firefox: /firefox/i, ie: /internet explorer/i, edge: /edge/i };
            var navegador = '';

            for (var key in browsers) {
                if (browsers[key].test(userAgent)) {
                    navegador = key;
                    break;
                }
            };

            if (navegador == '') {
                return true;
            }

            return false;
        };

        ctrlHome.PesquisarNoticias = function () {
            servHome.GetNoticias(ctrlHome.DadosPesquisa).then(function (data) {
                if (data.response != null) {
                    ctrlHome.model.Noticias = data.response.Noticias;
                    ctrlHome.DadosPesquisa.Paginacao.totalRegistros = data.response.Paginacao.totalRegistros;
                }

                if (ctrlHome.model.Noticias != null && ctrlHome.model.Noticias.length > 0) {
                    angularUtil.SetPagination(ctrlHome.DadosPesquisa.Paginacao, "#pagination", ctrlHome.DadosPesquisa.Paginacao.totalRegistros, ctrlHome.PesquisarNoticias);
                    $window.scrollTo(0, 0);
                }

                if (data.response.VerificarNavegador) {
                    if (ctrlHome.VerificaNavegadorIE()) {
                        var msg = ctrlHome.translations.Geral_NavegadorNaoSuportado.texto;
                        msg = msg.concat(' ', data.response.URLUtilizada);
                        messageService.MessageInfo(msg);
                    }
                }
            });
        };

        ctrlHome.AbrirModalNoticia = function (noticia) {
            var parametros = { Noticia: {} };
            parametros.Noticia = angular.copy(noticia);
            parametros.translations = ctrlHome.translations;

            var modalInstance = $uibModal.open({
                animation: true,
                backdrop: false,
                templateUrl: '/NewSafetyChem/Home/Publicacao_Noticia', controller: ctrlPublicacaoNoticia, controllerAs: 'ctrl',
                bindToController: true, size: 'lg',
                resolve: {
                    parametros: function () {
                        return angular.copy(parametros);
                    }
                }
            });

            // resultados do modal
            modalInstance.result.then(function () {
                // faz nada
            }, function () {
                // executado quando o modal é cancelado
            });
        };

    }]);
var ctrlPublicacaoNoticia =
    ['$scope', '$uibModalInstance', '$timeout', 'parametros', 'idiomaService', 'funcionalidadesService', '$rootScope', '$uibModal',
        function ($scope, $uibModalInstance, $timeout, parametros, idiomaService, funcionalidadesService, $rootScope, $uibModal) {

            var ctrl = this;
            ctrl.parametros = parametros;

            // Fechar modal
            ctrl.Cancelar = function () {
                $uibModalInstance.dismiss();
            };

            //Menu
            $timeout(function () {
                util.Events.SetFuncionalidadeAtual(null, Enums.Enum_Funcionalidade["Noticia"]);
                util.Events.ChangeCulture(null, true, true, false, false);
                angularUtil.SafeApply($scope);
            });

            //Traduções gerais
            ctrl.CallBackCulture = function (campos) {
                ctrl.parametros.IdiomaId = campos[0].IdiomaId;

                angularUtil.SafeApply($scope, function () {
                    idiomaService.setTranslationsCallBackCulture(campos);
                    ctrl.translations = idiomaService.translations;
                    ctrl.funcionalidadesService.GetTextoAcao(ctrl.opcoesRotina, ctrl.parametros.IdiomaId);
                });
            };
            callbackCultureFunction = ctrl.CallBackCulture;

        }];
(function () {

    var app = angular.module('home');


    app.service('servHome', ['$http', 'messageService', 'postComplexDataService', function ($http, messageService, postComplexDataService) {

        //Buscar Áreas
        this.GetNoticias = function (model) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/Home/GetNoticias', model
            ).then(function (response) {
                return response.data;
            });
        };
    }]);

})();

/**
 * angular-ui-sortable - This directive allows you to jQueryUI Sortable.
 * @version v0.15.0 - 2016-10-15
 * @link http://angular-ui.github.com
 * @license MIT
 */

!function(a,b,c){"use strict";b.module("ui.sortable",[]).value("uiSortableConfig",{items:"> [ng-repeat],> [data-ng-repeat],> [x-ng-repeat]"}).directive("uiSortable",["uiSortableConfig","$timeout","$log",function(a,d,e){return{require:"?ngModel",scope:{ngModel:"=",uiSortable:"="},link:function(f,g,h,i){function j(a,b){var c="function"==typeof a,d="function"==typeof b;return c&&d?function(){a.apply(this,arguments),b.apply(this,arguments)}:d?b:a}function k(a){var b=a.data("ui-sortable");return b&&"object"==typeof b&&"ui-sortable"===b.widgetFullName?b:null}function l(b,c){return B[b]?("stop"===b&&(c=j(c,function(){f.$apply()}),c=j(c,t)),c=j(B[b],c)):C[b]&&(c=C[b](c)),c||"items"!==b&&"ui-model-items"!==b||(c=a.items),c}function m(a,d,e){function f(a,b){b in z||(z[b]=null)}b.forEach(B,f);var g=null;if(d){var h;b.forEach(d,function(d,e){if(!(a&&e in a)){if(e in A)return void("ui-floating"===e?z[e]="auto":z[e]=l(e,c));h||(h=b.element.ui.sortable().options);var f=h[e];f=l(e,f),g||(g={}),g[e]=f,z[e]=f}})}return b.forEach(a,function(a,b){return b in A?("ui-floating"!==b||a!==!1&&a!==!0||!e||(e.floating=a),void(z[b]=l(b,a))):(a=l(b,a),g||(g={}),g[b]=a,void(z[b]=a))}),g}function n(a){var c=a.sortable("option","placeholder");if(c&&c.element&&"function"==typeof c.element){var d=c.element();return d=b.element(d)}return null}function o(a,b){var c=z["ui-model-items"].replace(/[^,]*>/g,""),d=a.find('[class="'+b.attr("class")+'"]:not('+c+")");return d}function p(a,b){var c=a.sortable("option","helper");return"clone"===c||"function"==typeof c&&b.item.sortable.isCustomHelperUsed()}function q(a,b,c){var d=null;return p(a,b)&&"parent"===a.sortable("option","appendTo")&&(d=c.last()),d}function r(a){return/left|right/.test(a.css("float"))||/inline|table-cell/.test(a.css("display"))}function s(a,b){for(var c=null,d=0;d<a.length;d++){var e=a[d];if(e.element[0]===b[0]){c=e.scope;break}}return c}function t(a,b){b.item.sortable._destroy()}function u(a){return a.parent().find(z["ui-model-items"]).index(a)}function v(){f.$watchCollection("ngModel",function(){d(function(){k(g)&&g.sortable("refresh")},0,!1)}),B.start=function(a,d){if("auto"===z["ui-floating"]){var e=d.item.siblings(),f=k(b.element(a.target));f.floating=r(e)}var g=u(d.item);d.item.sortable={model:i.$modelValue[g],index:g,source:d.item.parent(),sourceModel:i.$modelValue,cancel:function(){d.item.sortable._isCanceled=!0},isCanceled:function(){return d.item.sortable._isCanceled},isCustomHelperUsed:function(){return!!d.item.sortable._isCustomHelperUsed},_isCanceled:!1,_isCustomHelperUsed:d.item.sortable._isCustomHelperUsed,_destroy:function(){b.forEach(d.item.sortable,function(a,b){d.item.sortable[b]=c})}}},B.activate=function(a,b){y=g.contents();var c=n(g);if(c&&c.length){var d=o(g,c);y=y.not(d)}var e=b.item.sortable._connectedSortables||[];e.push({element:g,scope:f}),b.item.sortable._connectedSortables=e},B.update=function(a,b){if(!b.item.sortable.received){b.item.sortable.dropindex=u(b.item);var c=b.item.parent();b.item.sortable.droptarget=c;var d=s(b.item.sortable._connectedSortables,c);b.item.sortable.droptargetModel=d.ngModel,g.sortable("cancel")}var e=!b.item.sortable.received&&q(g,b,y);e&&e.length&&(y=y.not(e)),y.appendTo(g),b.item.sortable.received&&(y=null),b.item.sortable.received&&!b.item.sortable.isCanceled()&&f.$apply(function(){i.$modelValue.splice(b.item.sortable.dropindex,0,b.item.sortable.moved)})},B.stop=function(a,c){if(!c.item.sortable.received&&"dropindex"in c.item.sortable&&!c.item.sortable.isCanceled())f.$apply(function(){i.$modelValue.splice(c.item.sortable.dropindex,0,i.$modelValue.splice(c.item.sortable.index,1)[0])});else if((!("dropindex"in c.item.sortable)||c.item.sortable.isCanceled())&&!b.equals(g.contents(),y)){var d=q(g,c,y);d&&d.length&&(y=y.not(d)),y.appendTo(g)}y=null},B.receive=function(a,b){b.item.sortable.received=!0},B.remove=function(a,b){"dropindex"in b.item.sortable||(g.sortable("cancel"),b.item.sortable.cancel()),b.item.sortable.isCanceled()||f.$apply(function(){b.item.sortable.moved=i.$modelValue.splice(b.item.sortable.index,1)[0]})},C.helper=function(a){return a&&"function"==typeof a?function(d,e){var f=e.sortable,g=u(e);e.sortable={model:i.$modelValue[g],index:g,source:e.parent(),sourceModel:i.$modelValue,_restore:function(){b.forEach(e.sortable,function(a,b){e.sortable[b]=c}),e.sortable=f}};var h=a.apply(this,arguments);return e.sortable._restore(),e.sortable._isCustomHelperUsed=e!==h,h}:a},f.$watchCollection("uiSortable",function(a,b){var c=k(g);if(c){var d=m(a,b,c);d&&g.sortable("option",d)}},!0),m(z)}function w(){i?v():e.info("ui.sortable: ngModel not provided!",g),g.sortable(z)}function x(){return f.uiSortable&&f.uiSortable.disabled?!1:(w(),x.cancelWatcher(),x.cancelWatcher=b.noop,!0)}var y,z={},A={"ui-floating":c,"ui-model-items":a.items},B={receive:null,remove:null,start:null,stop:null,update:null},C={helper:null};return b.extend(z,A,a,f.uiSortable),b.element.fn&&b.element.fn.jquery?(x.cancelWatcher=b.noop,void(x()||(x.cancelWatcher=f.$watch("uiSortable.disabled",x)))):void e.error("ui.sortable: jQuery should be included before AngularJS!")}}}])}(window,window.angular);

var app = angular.module('pesquisaSatisfacao', ["angular-util", "angular-diretivas", "ui.bootstrap", "ngSanitize", "ui.sortable"], function ($httpProvider) {
});

app.controller('MainController', ['$scope', '$uibModal', '$rootScope', '$timeout', 'idiomaService', 'funcionalidadesService', 'messageService', 'servPesquisaSatisfacao', 'servDownload',
    function ($scope, $uibModal, $rootScope, $timeout, idiomaService, funcionalidadesService, messageService, servPesquisaSatisfacao, servDownload) {

        var ctrlPesquisaSatisfacao = this;

        ctrlPesquisaSatisfacao.model = { Registros: [], Paginacao: new Pagination() };
        ctrlPesquisaSatisfacao.RegsPagina = [10, 20, 50, 100, 200, 500];
        ctrlPesquisaSatisfacao.RowsPerPage = 10;
        ctrlPesquisaSatisfacao.opcoesRotina = [];
        ctrlPesquisaSatisfacao.TiposEmpresa = [];
        ctrlPesquisaSatisfacao.PesquisaSelecionada = { PesquisaId: 0 };

        //Seleção de linha da grid
        ctrlPesquisaSatisfacao.IsRowSelected = function (registroGrid) {
            if (ctrlPesquisaSatisfacao.PesquisaSelecionada && registroGrid.PesquisaId == ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId) {
                return true;
            };
            return false;
        };

        ctrlPesquisaSatisfacao.ShowContextMenu = function (itemPesquisa) {
            ctrlPesquisaSatisfacao.ClickGridLine(itemPesquisa);
            var lista = [];

            ctrlPesquisaSatisfacao.opcoesRotina.forEach(function (item) {
                if (item.ExibirNoContextMenu && item.AcaoDropdownMenu && item.Nivel != Enums.Enum_NivelFuncionalidade["FuncionalidadeGenericaTraducoes"]
                    && item.ExibirNoContextMenu) {
                    lista.push({ name: item.Nome, model: item, id: item.FuncionalidadeId });
                }
            });

            $(function (e) {
                $(".context-menu-one").contextMenu({
                    selector: 'td',
                    callback: function (key, options) {
                        var content = $(this).text();
                        ctrlPesquisaSatisfacao.ClickAction(lista[key].model);
                    },
                    items: lista
                });
            });
        };

        ctrlPesquisaSatisfacao.ClickGridLine = function (registro) {
            ctrlPesquisaSatisfacao.PesquisaSelecionada = angular.copy(registro);
        };

        ctrlPesquisaSatisfacao.PreparaDadosParaPesquisa = function () {
            ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId = 0;

            ctrlPesquisaSatisfacao.model.Paginacao.totalRegistros = 0;
            ctrlPesquisaSatisfacao.model.Paginacao.page = 1;
            ctrlPesquisaSatisfacao.model.Paginacao.rowsPerPage = ctrlPesquisaSatisfacao.RowsPerPage;
            ctrlPesquisaSatisfacao.model.Paginacao.rowsPerPageOptions = ctrlPesquisaSatisfacao.RegsPagina;
            ctrlPesquisaSatisfacao.model.Paginacao.SetTotalPages();

            ctrlPesquisaSatisfacao.PesquisarRegistros();
        };

        ctrlPesquisaSatisfacao.PesquisarRegistros = function () {
            ctrlPesquisaSatisfacao.model.Registros = [];
            servPesquisaSatisfacao.GetPesquisasSatisfacoes(ctrlPesquisaSatisfacao.model).then(function (data) {

                data.model.Registros.forEach(function (item) {
                    ctrlPesquisaSatisfacao.FormataDataEdicaoPesquisa(item);
                });

                ctrlPesquisaSatisfacao.model.Registros = data.model.Registros;
                ctrlPesquisaSatisfacao.model.Paginacao.totalRegistros = data.model.Paginacao.totalRegistros;

                if (ctrlPesquisaSatisfacao.model.Registros) {
                    angularUtil.SetPagination(ctrlPesquisaSatisfacao.model.Paginacao, "#pagination",
                        ctrlPesquisaSatisfacao.model.Paginacao.totalRegistros, ctrlPesquisaSatisfacao.PesquisarRegistros);
                }
            });
        };

        ctrlPesquisaSatisfacao.RegPaginasChange = function () {
            ctrlPesquisaSatisfacao.PreparaDadosParaPesquisa();
        };

        // ações clicadas. Essa função é chamada do registro da tabela FuncionalidadesAcoesHtml
        ctrlPesquisaSatisfacao.ClickAction = function (action) {

            switch (action.Link) {
                case '#Alterar': ctrlPesquisaSatisfacao.AbrirModalManutencao(false); break;
                case '#Incluir': ctrlPesquisaSatisfacao.AbrirModalManutencao(true, false); break;
                case '#VisualizarRespostas': ctrlPesquisaSatisfacao.VisualizarRespostas(); break;
                case '#ExportarRespostas': ctrlPesquisaSatisfacao.ExportarRespostas(); break;
                case '#Clonar': ctrlPesquisaSatisfacao.AbrirModalManutencao(false, true); break;
                case '#VerAlcance': ctrlPesquisaSatisfacao.VerAlcance(); break;
            }
        };

        ctrlPesquisaSatisfacao.ExportarRespostas = function () {

            if (ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId == 0) {
                return messageService.MessageInfo(ctrlPesquisaSatisfacao.translations.Geral_SelecioneRegistroGrid.texto);
            }
            else if (ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId > 0 && ctrlPesquisaSatisfacao.PesquisaSelecionada.QtdRespostas == 0) {
                return messageService.MessageInfo(ctrlPesquisaSatisfacao.translations.PesquisaSatisfacao_NaoExistemRespostasPesquisa.texto);
            }
            else {
                servPesquisaSatisfacao.ExportarRespostasPesquisaSatisfacao(ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId).then(function (result) {

                    if (result.ValidationModel.Success) {
                        servDownload.GetDownload(Enums.Enum_ExtencaoArquivo['XLSX'], Enums.Enum_Funcionalidade['Relatorio'], result.FileName).then(function (data) {
                            // o resultado é o arquivo baixado no browser.
                        });
                    }
                    else {
                        messageService.MessageModel(result.ValidationModel);
                    }
                });
            }
        };

        ctrlPesquisaSatisfacao.VisualizarRespostas = function () {

            if (ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId == 0) {
                return messageService.MessageInfo(ctrlPesquisaSatisfacao.translations.Geral_SelecioneRegistroGrid.texto);
            }
            else if (ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId > 0 && ctrlPesquisaSatisfacao.PesquisaSelecionada.QtdRespostas == 0) {
                return messageService.MessageInfo(ctrlPesquisaSatisfacao.translations.PesquisaSatisfacao_NaoExistemRespostasPesquisa.texto);
            }
            else {
                servPesquisaSatisfacao.GetPesquisaSatisfacaoRespostas(ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId).then(function (data) {

                    var parametros = { translations: ctrlPesquisaSatisfacao.translations, model: data.model, titulo: ctrlPesquisaSatisfacao.PesquisaSelecionada.Nome };

                    $uibModal.open({
                        animation: true,
                        templateUrl: '/NewSafetyChem/PesquisaSatisfacao/PesquisaSatisfacao_Respostas',
                        controllerAs: 'ctrl',
                        backdrop: false, // evita sair sem ser pelo botão cancelar
                        bindToController: true, size: 'lg', // 'lg', 'dialog', 'sm'
                        resolve: {
                            parametros: function () {
                                return angular.copy(parametros);
                            }
                        },
                        controller: ['$uibModal', 'parametros', '$uibModalInstance', function ($uibModal, parametros, $uibModalInstance) {
                            var ctrl = this;
                            ctrl.parametros = parametros;

                            ctrl.colunas = [];
                            ctrl.respostasIds = [];

                            ctrl.colunas.push({ id: -1, texto: ctrl.parametros.translations.Empresa.texto });
                            ctrl.colunas.push({ id: -2, texto: ctrl.parametros.translations.Geral_Usuario.texto });
                            ctrl.colunas.push({ id: -3, texto: ctrl.parametros.translations.Data.texto });

                            ctrl.parametros.model.Colunas.forEach(function (col) {
                                ctrl.colunas.push({ id: col.PesquisaCampoId, texto: col.Descricao });
                            });

                            ctrl.parametros.model.Registros.filter(function (item) {

                                var jaAdd = ctrl.respostasIds.find(function (reg) {
                                    return (reg.PesquisaSatisfacaoRespostaId == item.PesquisaSatisfacaoRespostaId);
                                });

                                if (!jaAdd)
                                    ctrl.respostasIds.push(item);
                            });

                            ctrl.GetValorColuna = function (coluna, registro) {
                                if (coluna.id == -1) {
                                    return registro.Empresa;
                                }
                                else if (coluna.id == -2) {
                                    return registro.Usuario;
                                }
                                else if (coluna.id == -3) {
                                    return registro.Data;
                                }
                                else {

                                    var resposta = ctrl.parametros.model.Registros.find(function (item) {
                                        return (item.PesquisaSatisfacaoRespostaId == registro.PesquisaSatisfacaoRespostaId && item.PesquisaCampoId == coluna.id);
                                    });

                                    if (resposta)
                                        return resposta.Conteudo;
                                }
                            };

                            ctrl.Fechar = function () {
                                $uibModalInstance.dismiss();
                            };
                        }]
                    });
                });
            }
        };

        ctrlPesquisaSatisfacao.EditarPesquisa = function () {
            if (ctrlPesquisaSatisfacao.PodeAlterar) {
                ctrlPesquisaSatisfacao.AbrirModalManutencao(false);
            }
        };

        ctrlPesquisaSatisfacao.VerAlcance = function () {

            if (ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId == 0) {
                return messageService.MessageInfo(ctrlPesquisaSatisfacao.translations.Geral_SelecioneRegistroGrid.texto);
            }
            else {

                var parametros = { translations: ctrlPesquisaSatisfacao.translations, model: ctrlPesquisaSatisfacao.PesquisaSelecionada.Alcances, titulo: ctrlPesquisaSatisfacao.PesquisaSelecionada.Nome, totalRegistros: ctrlPesquisaSatisfacao.PesquisaSelecionada.Alcance };

                $uibModal.open({
                    animation: true,
                    templateUrl: '/NewSafetyChem/PesquisaSatisfacao/PesquisaSatisfacao_Alcance',
                    controllerAs: 'ctrl',
                    backdrop: false, // evita sair sem ser pelo botão cancelar
                    bindToController: true, size: 'lg', // 'lg', 'dialog', 'sm'
                    resolve: {
                        parametros: function () {
                            return angular.copy(parametros);
                        }
                    },
                    controller: ['parametros', '$uibModalInstance', function (parametros, $uibModalInstance) {
                        var ctrl = this;
                        ctrl.parametros = parametros;
                        ctrl.nomePropriedade = null;
                        ctrl.reverse = true;

                        ctrl.OrdenaPor = function (nomePropriedade) {
                            ctrl.reverse = ctrl.nomePropriedade == nomePropriedade ? !ctrl.reverse : false;
                            ctrl.nomePropriedade = nomePropriedade;
                        };

                        ctrl.Fechar = function () {
                            $uibModalInstance.dismiss();
                        };
                    }]
                });
            }
        };

        ctrlPesquisaSatisfacao.AbrirModalManutencao = function (ehInclusao, ehClonar) {

            if (ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId == 0 && !ehInclusao) {
                return messageService.MessageInfo(ctrlPesquisaSatisfacao.translations.Geral_SelecioneRegistroGrid.texto);
            }

            servPesquisaSatisfacao.GetPesquisaSatisfacaoEmpresas(ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId).then(function (data) {
                ctrlPesquisaSatisfacao.Empresas = data.model;
                ctrlPesquisaSatisfacao.TemEmpresaSelecionada = false;
                ctrlPesquisaSatisfacao.EmpresaSelecionada = {};
                ctrlPesquisaSatisfacao.EmpresaSelecionada = ctrlPesquisaSatisfacao.Empresas.filter(function (empresa) {
                    return empresa.CheckEmpresa;
                });

                if (ctrlPesquisaSatisfacao.EmpresaSelecionada.length > 0 && !ehInclusao)
                    ctrlPesquisaSatisfacao.TemEmpresaSelecionada = true;

                var parametros = {
                    ehInclusao: ehInclusao,
                    translations: ctrlPesquisaSatisfacao.translations,
                    model: {
                        PesquisaId: ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId
                    },
                    temEmpresaSelecionada: ctrlPesquisaSatisfacao.TemEmpresaSelecionada
                };

                servPesquisaSatisfacao.GetPesquisaSatisfacaoById(parametros.model.PesquisaId).then(function (data) {

                    if (!ehInclusao && !ehClonar)
                        ctrlPesquisaSatisfacao.FormataDataEdicaoPesquisa(data.model);
                    else {
                        data.model.DataInicio = null;
                        data.model.DataFim = null;
                        data.model.ExcluirUsrUltAcessoAntesDe = null;
                        data.model.ExcluirEmpValidadeAntesDe = null;
                        data.model.ExcluirUsrCriadosApos = null;
                        if (ehClonar) {
                            data.model.OriginalPesquisaId = parametros.model.PesquisaId;
                            data.model.EhClonar = ehClonar;
                            data.model.PesquisaId = 0;
                            data.model.Nome = null;
                            data.model.PreenchimentoObg = false;
                            data.model.Pausado = false;
                        }
                    }

                    parametros.model = data.model;
                    parametros.model.Empresas = ctrlPesquisaSatisfacao.Empresas;
                    parametros.tiposEmpresa = ctrlPesquisaSatisfacao.TiposEmpresa;
                    ctrlPesquisaSatisfacao.PesquisaSelecionada.PesquisaId = 0;
                    ctrlPesquisaSatisfacao.ExecutaAberturaModal(parametros);
                });
            });
        };

        ctrlPesquisaSatisfacao.FormataDataEdicaoPesquisa = function (model) {
            model.DataInicio = funcionalidadesService.FormataData(model.DataInicio);
            model.DataFim = funcionalidadesService.FormataData(model.DataFim);
            model.ExcluirUsrCriadosApos = funcionalidadesService.FormataData(model.ExcluirUsrCriadosApos);
            model.ExcluirUsrUltAcessoAntesDe = funcionalidadesService.FormataData(model.ExcluirUsrUltAcessoAntesDe);
            model.ExcluirEmpValidadeAntesDe = funcionalidadesService.FormataData(model.ExcluirEmpValidadeAntesDe);
        };

        ctrlPesquisaSatisfacao.ExecutaAberturaModal = function (parametros) {
            var modalInstance = $uibModal.open({
                animation: true,
                backdrop: false, // evita sair sem ser pelo botão cancelar
                templateUrl: '/NewSafetyChem/PesquisaSatisfacao/PesquisaSatisfacao_Manutencao', controller: ctrlPesquisaSatisfacaoManutencao, controllerAs: 'ctrl',
                bindToController: true, size: 'md', // 'lg', 'dialog'
                resolve: {
                    parametros: function () { return angular.copy(parametros); }
                }
            });
            modalInstance.result.then(function (listaEmpresa) {
                ctrlPesquisaSatisfacao.PreparaDadosParaPesquisa();
                ctrlPesquisaSatisfacao.TiposEmpresa = listaEmpresa;
            }, function (listaEmpresa) {
                    ctrlPesquisaSatisfacao.TiposEmpresa = listaEmpresa;
            });
        };

        // Chamado quando o header do grid é clicado, para fazer a ordenação pelo campo clicado.
        ctrlPesquisaSatisfacao.ClickGridHeader = function (field) {
            if (field == ctrlPesquisaSatisfacao.model.Paginacao.sortField) {
                ctrlPesquisaSatisfacao.model.Paginacao.asc = !ctrlPesquisaSatisfacao.model.Paginacao.asc;
            };
            ctrlPesquisaSatisfacao.model.Paginacao.sortField = field;
            ctrlPesquisaSatisfacao.PreparaDadosParaPesquisa();
        };

        //Traduções gerais
        ctrlPesquisaSatisfacao.CallBackCulture = function (campos) {
            angularUtil.SafeApply($scope, function () {
                idiomaService.setTranslationsCallBackCulture(campos);
                ctrlPesquisaSatisfacao.translations = idiomaService.translations;
            });
        };

        callbackCultureFunction = ctrlPesquisaSatisfacao.CallBackCulture;

        //Ações - HTML
        ctrlPesquisaSatisfacao.funcionalidadesService = funcionalidadesService;
        ctrlPesquisaSatisfacao.funcionalidadesService.GetOpcoesRotina(Enums.Enum_Funcionalidade["PesquisaSatisfacao"]).then(function (opcoesRotina) {
            ctrlPesquisaSatisfacao.opcoesRotina = opcoesRotina;
            ctrlPesquisaSatisfacao.PodeAlterar = opcoesRotina.PodeAlterar;
        });

        //Menu
        $timeout(function () {
            util.Events.SetFuncionalidadeAtual(null, Enums.Enum_Funcionalidade['PesquisaSatisfacao']);
            util.Events.ChangeCulture(null, true, true, false, false);
            angularUtil.SafeApply($scope);
        });
    }]);

var ctrlPesquisaSatisfacaoExibicao =
    ['$scope', '$uibModalInstance', '$timeout', 'parametros', 'messageService', 'servPesquisaSatisfacao', '$uibModal',
        function ($scope, $uibModalInstance, $timeout, parametros, messageService, servPesquisaSatisfacao, $uibModal) {

            //***********************Inicialização******************

            var ctrl = this;
            ctrl.parametros = parametros;

            ctrl.parametros.tipoTitulo = Enums.Enum_TipoElementoHtml["H2"];
            ctrl.parametros.tipoTexto = Enums.Enum_TipoElementoHtml["Label"];
            ctrl.parametros.tipoCaixaTexto = Enums.Enum_TipoElementoHtml["Textarea"];
            ctrl.parametros.tipoPont1a5 = Enums.Enum_TipoElementoHtml["RadioGroup1a5"];
            ctrl.parametros.tipoPont1a10 = Enums.Enum_TipoElementoHtml["RadioGroup1a10"];
            ctrl.parametros.tipoCheckbox = Enums.Enum_TipoElementoHtml["Checkbox"];
            ctrl.obgSeExistirCampoMenorQue = ctrl.parametros.model.PesquisaSatisfacaoResposta.PesquisasSatisfacaoRespostasCampos.find(function (item) {
                return item.PesquisaSatisfacaoCampo.ObrigatorioSeExistirCampoMenorQue;
            });
            ctrl.campoObg = false;

            ctrl.parametros.model.PesquisaSatisfacaoResposta.PesquisasSatisfacaoRespostasCampos.forEach(function (campos) {
                if (campos.PesquisaSatisfacaoCampo.Tipo == ctrl.parametros.tipoCheckbox && campos.Conteudo == null)
                    campos.Conteudo = false;
            });

            ctrl.AlteraConteudoNota = function (conteudo) {
                if (ctrl.obgSeExistirCampoMenorQue) {
                    if ((conteudo < ctrl.obgSeExistirCampoMenorQue.PesquisaSatisfacaoCampo.ObrigatorioSeExistirCampoMenorQue) && (!ctrl.obgSeExistirCampoMenorQue.Conteudo))
                        ctrl.campoObg = true;
                    else
                        ctrl.campoObg = false;
                }
                else {
                    ctrl.campoObg = false;
                }
            };

            ctrl.MarcaCheckbox = function (item) {
                item.Conteudo = !item.Conteudo;
            };

            ctrl.Cancelar = function () {
                $uibModalInstance.dismiss();
            };

            ctrl.Salvar = function () {

                if (ctrl.campoObg && ctrl.obgSeExistirCampoMenorQue.Conteudo)
                    ctrl.campoObg = false;

                var existeCampoObgNaoPreenchido = ctrl.parametros.model.PesquisaSatisfacaoResposta.PesquisasSatisfacaoRespostasCampos.find(function (item) {
                    return (item.PesquisaSatisfacaoCampo.PreenchimentoObg && !item.Conteudo);
                });

                if (existeCampoObgNaoPreenchido || ctrl.campoObg) {
                    return messageService.MessageInfo(ctrl.parametros.translations.Geral_PreencherCamposObrigatorios.texto);
                }
                else {
                    servPesquisaSatisfacao.SalvarRespostasPesquisaSatisfacao(ctrl.parametros.model).then(function (data) {
                        if (data.response.Success)
                            return $uibModalInstance.close(data.response);
                        else
                            return messageService.MessageModel(data.response);
                    });
                }
            };

            //*****************************************************
        }];
(function () {

    var app = angular.module('pesquisaSatisfacao');
    app.service('servPesquisaSatisfacao', ['$http', 'messageService', 'postComplexDataService', '$uibModal', function ($http, messageService, postComplexDataService, $uibModal) {

        this.VerificaExistePesquisaSatisfacao = function (callbackMensagem, callbackAberturaModal, translations) {

            $http.get('/NewSafetyChem/PesquisaSatisfacao/GetPesquisaSatisfacaoExibicao').then(function (response) {
                return response.data;
            }).then(function (data) {
                if (data.model && data.model.PesquisaId > 0) {
                    callbackMensagem(data.model, translations, callbackAberturaModal);
                };
            });
        };

        this.AbrirMensagemRespondeOuNaoPesquisa = function (model, translations, callbackAberturaModal) {

            var parametros = { translations: translations, model: model };

            if (!parametros.model.PreenchimentoObg) {
                messageService.MessagePesquisaSatisfacao(translations.Geral_GostariamosDeAprenderPesquisa.texto, translations.Geral_PesquisaDeSatisfacao.texto, 'info').then(function (index) {
                    if (index == 0) {

                        callbackAberturaModal(parametros);

                    } else if (index == 1) {/*cancelar*/ }
                });
            }
            else {
                callbackAberturaModal(parametros);
            }
        };

        this.ExecutaAberturaModalPesquisaSatisfacao = function (parametros) {
            var modalInstance = $uibModal.open({
                animation: true,
                keyboard: !parametros.model.PreenchimentoObg,
                backdrop: !parametros.model.PreenchimentoObg, // evita sair sem ser pelo botão cancelar
                templateUrl: '/NewSafetyChem/PesquisaSatisfacao/PesquisaSatisfacao_Exibicao', controller: ctrlPesquisaSatisfacaoExibicao, controllerAs: 'ctrl',
                bindToController: true, size: 'dialog', // 'lg', 'dialog'
                resolve: {
                    parametros: function () { return angular.copy(parametros); }
                }
            });
            modalInstance.result.then(function (retornoDoModal) {
                if (retornoDoModal.Success) {
                    messageService.MessageModel(retornoDoModal);
                };

            }, function () { }); // executado quando o modal é cancelado
        };

        this.GetPesquisasSatisfacoes = function (model) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/GetPesquisasSatisfacoes',
                model
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        };  

        this.GetPesquisaSatisfacaoById = function (pesquisaId) {
            return $http.get('/NewSafetyChem/PesquisaSatisfacao/GetPesquisaSatisfacaoById', { params: { pesquisaId: pesquisaId } }).then(function (response) {
                return response.data;
            });
        };

        this.GetPesquisaSatisfacaoEmpresas = function (pesquisaId) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/GetPesquisaSatisfacaoEmpresas',
                pesquisaId
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        };  

        this.GetPesquisaSatisfacaoUsuarios = function (pesquisaId) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/GetPesquisaSatisfacaoUsuarios',
                pesquisaId
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        }; 

        this.SalvarPesquisaSatisfacao = function (model) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/SalvarPesquisaSatisfacao',
                model
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        };

        this.GetPesquisaSatisfacaoUsuariosEmpresas = function (pesquisaId, empresasSelecionadasIds) {

            let model = {
                PesquisaId: pesquisaId,
                EmpresasSelecionadasIds: empresasSelecionadasIds
            };

            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/GetPesquisaSatisfacaoUsuariosEmpresas',
                model
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        };

        this.GetPesquisaSatisfacaoTreinamentos = function (pesquisaId, empresasSelecionadasIds) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/GetPesquisaSatisfacaoTreinamentos',
                { pesquisaId: pesquisaId }
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        };

        this.SalvarRespostasPesquisaSatisfacao = function (model) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/SalvarRespostasPesquisaSatisfacao',
                model
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        };

        this.GetPesquisaSatisfacaoRespostas = function (pesquisaId) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/GetPesquisaSatisfacaoRespostas',
                pesquisaId
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        };  

        this.ExportarRespostasPesquisaSatisfacao = function (pesquisaId) {
            return postComplexDataService.postComplexData(
                '/NewSafetyChem/PesquisaSatisfacao/ExportarRespostasPesquisaSatisfacao',
                pesquisaId
            ).then(function (response) {
                return response.data;
                //em caso de erro
            }, function (response) {
                messageService.MessageInternalError();
            });
        };  

        this.GetTiposEmpresa = function () {
            return $http.get('/NewSafetyChem/Empresa/GetTiposEmpresa').then(function (response) {
                return response.data;
            }, function (response) {
                messageService.MessageInternalError();
            });
        }; 

    }]);
})();


$(document).ready(function (e) {
    home.View.StartEvents(e);
});

var home = {
    View: {
        StartEvents: function (e) {
            util.Events.SetFuncionalidadeAtual(e, Funcionalidades.Home.value);
            util.Events.ChangeCulture(e, true, true, false, false, null);
        }
    }
}


$(document).ready(function () {
    CountNotificacoes();
    
    $("#modalNotificacao").on("hidden.bs.modal", function () {
        CountNotificacoes();
    });

    $('#listaNoti').on("click", "li", function () {
        var id = $(this).attr('id');
        AbrirNotificacao(id);
    });

    $('#verTodasNoti').on("click", function () {
        SortFields('data', true);
    });
});

function FecharModalNotificacao() {
    $("#modalNotificacao").modal("hide");
}

function FecharModalTodasNotificacoes() {
    $("#modalVerTodasNotificacoes").modal("hide");
}

function BtnMarcarTodasLidas() {
    $("#modalMarcarTodas").modal("show");
}

function FecharSalvarTodasNotificacoes() {
    $("#modalMarcarTodas").modal("hide");
}

function BtnSalvarMarcarTodasLidas() {
    $.ajax({
        type: 'GET',
        contentType: 'application/json; charset=utf-8',
        url: '/NewSafetyChem/Notificacoes/MarcarTodasComoLidas',
        success: function (data) {
            FecharSalvarTodasNotificacoes();
            CountNotificacoes();
            for (var i = 0; i < data.length; i++) {
                $('.' + data[i].NotificacaoId + ' span').html($('.' + data[i].NotificacaoId + ' span').text());
                $('.' + data[i].NotificacaoId + ' p').html($('.' + data[i].NotificacaoId + ' p').text());
            }
        }
    });
}
var title = $("#tituloHeader").text();

function CountNotificacoes() {
    var serviceURL = '/NewSafetyChem/Notificacoes/GetCountNotificacoes';


    $.ajax({
        type: "POST",
        url: serviceURL,
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        success: SuccessFunc,
        error: ErrorFunc
    });


    function SuccessFunc(data, status) {
        $("#countId").attr("data-count", data);
        if (data == 0) {
            $("#tituloHeader").text(title);
            $("#countId").removeAttr("data-count");
            $('#naoTemNovasNotificacoes').show();
            $('#novasNotificacoes').hide();
            $('#divTodasNotificacoes').hide();
        }
        else {
            $("#tituloHeader").text('');
            $("#tituloHeader").text('(' + data + ') ' + title);
            $('#novasNotificacoes').show();
            $('#naoTemNovasNotificacoes').hide();
        }
    }

    function ErrorFunc() {
        alert('error');
    }
}

function AbrirNotificacao(idNotificacao) {
    $('.' + idNotificacao + ' span').html($('.' + idNotificacao + ' span').text());
    $('.' + idNotificacao + ' p').html($('.' + idNotificacao + ' p').text());
    if (idNotificacao > 0) {
        $.ajax({
            type: 'GET',
            data: { idNotificacao: idNotificacao },
            contentType: 'application/json; charset=utf-8',
            url: '/NewSafetyChem/Notificacoes/Publicacao_Notificacao',
            success: function (data) {
                $('#tituloModal').html(data);
                $('#modalNotificacao').modal('show');
            }
        });
    }
}

function VerNotificacaoModal(id) {
    AbrirNotificacao(id);
}

//Chamado quando o header do grid é clicado, para fazer a ordenação pelo campo clicado.
function SortFields(field, asc) {
    field = (!field ? 'data' : field);
        
    if (asc == null)
        asc = (ascDescricao === 'true');

    asc = (!oldField || oldField != field ? true : !asc);
    ascDescricao = asc.toString();

    $.ajax({
        type: "GET",
        data: { field: field, asc: asc },
        url: '/NewSafetyChem/Notificacoes/SortFields',
        success: function (data) {
            if (oldField != '')                
                Notificacoes_Todas();
            }
    });
    
    oldField = field;
    
};
var ascDescricao = '';
var oldField = '';

function Notificacoes_Todas() {
    $.ajax({
        type: 'GET',
        contentType: 'application/json; charset=utf-8',
        url: '/NewSafetyChem/Notificacoes/Notificacoes_Todas',
        success: function (data) {
            CountNotificacoes();
            $('#verTodas').html(data);
            $('#modalVerTodasNotificacoes').modal('show');
        }
    });
}



$(document).ready(function () {

    StartDarkMode();

    var image = new Image();
    image.src = $('#logoEmp').attr("src");
    larguraFinal = image.width * 50 / image.height;

    if (larguraFinal >= 198) {
        larguraFinal = larguraFinal * 25 / 50;
        $("#logoEmp").css("padding-top", 15);
    }
    $("#logoEmp").width(Math.round(larguraFinal));

    function StartDarkMode() {

        $('.temaEscuro').show();
        $('.temaClaro').hide();

        if (!localStorage.getItem('darkmode')) {

            document.body.classList.remove("dark-theme");
            localStorage.setItem('darkmode', "false");
            document.body.ehDark = false;
        }
        if (localStorage.getItem('darkmode') == "false") {
            $('.temaEscuro').show();
            $('.temaClaro').hide();
            $('#logoNormal').show();
            $('#logoWhite').hide();

            document.body.classList.remove("dark-theme");

            localStorage.setItem('darkmode', "false");
            document.body.ehDark = false;
        }

        if (localStorage.getItem('darkmode') == "true") {
            $('.temaEscuro').hide();
            $('.temaClaro').show();
            $('#logoNormal').hide();
            $('#logoWhite').show();

            document.body.classList.add("dark-theme");
            localStorage.setItem('darkmode', "true");
            document.body.ehDark = true;
        }
    }


    const chk = document.getElementById('temaOpcao');

    if (chk) {
        StartDarkMode();
        chk.addEventListener('click', (event) => {
            event.preventDefault();
            event.stopImmediatePropagation();

            if (localStorage.getItem('darkmode') == "false") {
                document.body.classList.add("dark-theme");
                $('.temaEscuro').hide();
                $('.temaClaro').show();
                $('#logoNormal').hide();
                $('#logoWhite').show();

                localStorage.removeItem('darkmode');
                localStorage.setItem('darkmode', "true");
                document.body.ehDark = true;

            } else {

                document.body.classList.remove("dark-theme");
                $('.temaEscuro').show();
                $('.temaClaro').hide();
                $('#logoNormal').show();
                $('#logoWhite').hide();

                localStorage.removeItem('darkmode');
                localStorage.setItem('darkmode', "false");
                document.body.ehDark = false;

            }
            return false;
        });
        $('#logoEmp').show();
    }



});


$(document).ready(function (e) {
    var navegador = (function (agent) {
        switch (true) {
            case agent.indexOf("edge") > -1: return "Edge";
            case agent.indexOf("edg") > -1: return "Edge dev/can";
            case agent.indexOf("opr") > -1 && !!window.opr: return "Opera";
            case agent.indexOf("chrome") > -1 && !!window.chrome: return "Chrome";
            case agent.indexOf("trident") > -1: return "IE";
            case agent.indexOf("firefox") > -1: return "Firefox";
            case agent.indexOf("safari") > -1: return "Safari";
            default: return "other";
        }
    })(window.navigator.userAgent.toLowerCase());

    $.ajax({
        url: $("#pathNavegador").val(),
        type: 'GET',
        data: { navegador: navegador },
        headers: {
            "Content-Type": "application/json"
        },
        success: function (data) {
            $("#lblVersaoPublicada").text(data.versao);
        }
    });
});
